<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:vm="clr-namespace:Builder.ViewModel"
                    xmlns:local="clr-namespace:Builder.Resource">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Style/Icons.xaml" />
        <ResourceDictionary Source="../Style/ButtonDictionary.xaml" />
        <ResourceDictionary Source="../Style/SharedSettingsDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Always template -->
    <DataTemplate x:Key="AlwaysContent" />

    <!-- Contains template -->
    <DataTemplate x:Key="ContainsContent">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" Text="{Binding Selected.Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Controls:TextBoxHelper.Watermark="xpath" Margin="{StaticResource RuleSubElementMargin}"/>
            <TextBox Grid.Column="1" Text="{Binding Selected.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Controls:TextBoxHelper.Watermark="value" Margin="{StaticResource RuleSubElementMargin}"/>
        </Grid>
    </DataTemplate>

    <!-- Count template -->
    <DataTemplate x:Key="CountContent">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <ComboBox Grid.Column="0" SelectedValue="{Binding Selected.Operator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValuePath="Content" Margin="{StaticResource RuleSubElementMargin}">
                <ComboBoxItem Content="="/>
                <ComboBoxItem Content="&gt;"/>
                <ComboBoxItem Content="&lt;"/>
                <ComboBoxItem Content="&gt;="/>
                <ComboBoxItem Content="&lt;="/>
            </ComboBox>
            <TextBox Grid.Column="1" Text="{Binding Selected.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Controls:TextBoxHelper.Watermark="value" Margin="{StaticResource RuleSubElementMargin}"/>
            <ToggleButton Grid.Column="2" Margin="{StaticResource RuleSubElementMargin}" 
                          Style="{StaticResource LoopToggleButtonStyle}" ToolTip="Repeating" BorderBrush="Transparent"
                          IsChecked="{Binding Selected.Resets, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            </ToggleButton>
        </Grid>
    </DataTemplate>

    <!-- Condition selector -->
    <Style x:Key="SelectedConditionContent" TargetType="ContentPresenter">
        <Setter Property="ContentTemplate" Value="{StaticResource AlwaysContent}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=SelectedConditionComboBox, Path=SelectedItem.DisplayName}" Value="Contains">
                <Setter Property="ContentTemplate" Value="{StaticResource ContainsContent}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=SelectedConditionComboBox, Path=SelectedItem.DisplayName}" Value="Always">
                <Setter Property="ContentTemplate" Value="{StaticResource AlwaysContent}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=SelectedConditionComboBox, Path=SelectedItem.DisplayName}" Value="Count">
                <Setter Property="ContentTemplate" Value="{StaticResource CountContent}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Condition template -->
    <DataTemplate x:Key="ConditionTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ItemsControl ItemsSource="{Binding ConditionGroup.Conditions, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="7*" />
                                <ColumnDefinition Width="10*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>

                            <ComboBox x:Name="SelectedConditionComboBox" ItemsSource="{Binding AvailableConditions, Mode=OneTime}" DisplayMemberPath="DisplayName" 
                            SelectedItem="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" Margin="{StaticResource RuleElementMargin}"/>

                            <ContentPresenter Grid.Column="1" Style="{StaticResource SelectedConditionContent}" Content="{Binding}" Margin="{StaticResource RuleElementMargin}"/>

                            <Button Grid.Column="2" Command="{Binding Path=DataContext.ConditionGroup.RemoveConditionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}" 
                            CommandParameter="{Binding}" Style="{StaticResource RemoveButtonStyle}" Margin="{StaticResource RuleLastElementMargin}"/>

                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Button Grid.Row="1" Command="{Binding ConditionGroup.AddConditionCommand}" Style="{StaticResource AddRuleButtonStyle}" />
        </Grid>
    </DataTemplate>
</ResourceDictionary>