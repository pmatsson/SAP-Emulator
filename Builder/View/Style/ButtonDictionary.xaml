<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:conv="clr-namespace:MQChatter.View.Converter"
                    xmlns:local="clr-namespace:MQChatter.View.Style">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ColorDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
        <Setter Property="Focusable" Value="False" />
    </Style>

    <Style x:Key="BaseToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MetroToggleButton}">
        <Setter Property="Focusable" Value="False" />
    </Style>

    <Style x:Key="FileButtonStyle" TargetType="Button" x:Shared="False" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <iconPacks:PackIconMaterial Kind="FolderOpen" Foreground="{StaticResource FileYellowBrush}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoopToggleButtonStyle" TargetType="{x:Type ToggleButton}" x:Shared="False" BasedOn="{StaticResource BaseToggleButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <iconPacks:PackIconEntypo Kind="Loop" Foreground="DimGray" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content">
                    <Setter.Value>
                        <iconPacks:PackIconEntypo Kind="Loop" Foreground="Azure" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MQSettingsToggleButtonStyle" TargetType="ToggleButton" x:Shared="False" BasedOn="{StaticResource BaseToggleButtonStyle}">
        <Style.Resources>
            <conv:IsNotNullOrEmptyStringConverter x:Key="isNotNullOrEmptyConv" />
        </Style.Resources>
        <Setter Property="Content">
            <Setter.Value>
                <iconPacks:PackIconMaterial Kind="LanDisconnect" Foreground="IndianRed" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=QueueManagerName, Converter={StaticResource isNotNullOrEmptyConv}}" Value="True" />
                    <Condition Binding="{Binding Path=QueueName, Converter={StaticResource isNotNullOrEmptyConv}}" Value="True" />
                    <Condition Binding="{Binding Path=ChannelName, Converter={StaticResource isNotNullOrEmptyConv}}" Value="True" />
                    <Condition Binding="{Binding Path=Hostname, Converter={StaticResource isNotNullOrEmptyConv}}" Value="True" />
                    <Condition Binding="{Binding Path=Port, Converter={StaticResource isNotNullOrEmptyConv}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Content">
                    <Setter.Value>
                        <iconPacks:PackIconMaterial Kind="LanConnect" Foreground="DimGray" />
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RemoveButtonStyle" TargetType="Button" x:Shared="False" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <iconPacks:PackIconFontAwesome Kind="TrashAltRegular" Foreground="IndianRed" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddRuleButtonStyle" TargetType="Button" x:Shared="False" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="Content">
            <Setter.Value>
                <iconPacks:PackIconModern Kind="ListAddBelow" Foreground="Green" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ErrorButtonStyle" TargetType="Button" x:Shared="False" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="Content">
            <Setter.Value>
                <iconPacks:PackIconMaterial Kind="AlertCircleOutline" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>