<UserControl x:Class="MQChatter.View.TestBuilderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:local="clr-namespace:MQChatter.View"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             MinWidth="300" MinHeight="300"
              TextElement.Foreground="{DynamicResource MaterialDesignBody}"
     TextElement.FontWeight="Regular"
     TextElement.FontSize="13"
     TextOptions.TextFormattingMode="Ideal"
     TextOptions.TextRenderingMode="Auto"
     Background="{DynamicResource MaterialDesignPaper}"
     FontFamily="{DynamicResource MaterialDesignFont}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="TestBuilderView.TriggerResource.xaml" />
                <ResourceDictionary Source="TestBuilderView.ConditionResource.xaml" />
                <ResourceDictionary Source="TestBuilderView.ActionResource.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <DataGrid x:Name="RuleDG" ItemsSource="{Binding GroupedRuleGroups, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}" AutoGenerateColumns="False"
              CanUserAddRows="False" CanUserDeleteRows="True" AlternationCount="2" EnableColumnVirtualization="True" EnableRowVirtualization="True"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" SelectedItem="{Binding SelectedRule, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
              VerticalScrollBarVisibility="Visible" GridLinesVisibility="None"  dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True">
        <DataGrid.GroupStyle>
            <GroupStyle>
                <GroupStyle.ContainerStyle>
                    <Style TargetType="{x:Type GroupItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                    <Expander x:Name="exp" IsExpanded="True">
                                        <Expander.Header>
                                            <TextBlock Text="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" />
                                        </Expander.Header>
                                        <ItemsPresenter />
                                    </Expander>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </GroupStyle.ContainerStyle>
                <GroupStyle.Panel>
                    <ItemsPanelTemplate>
                        <DataGridRowsPresenter />
                    </ItemsPanelTemplate>
                </GroupStyle.Panel>
            </GroupStyle>
        </DataGrid.GroupStyle>
        <DataGrid.CellStyle>
            <Style TargetType="DataGridCell">
                <Setter Property="Padding" Value="20" />
                <Setter Property="BorderBrush" Value="#FF2567C7" />
                <Setter Property="BorderThickness" Value="0,0.5,0,0.5" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="0,0,0,2.5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="0,0,0,0">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <!--<Setter Property="Foreground" Value="Black" />-->
                        <Setter Property="Background" Value="LightSteelBlue" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </DataGrid.CellStyle>
        <DataGrid.RowStyle>
            <Style TargetType="DataGridRow">

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridRow">
                            <Border x:Name="DGR_Border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True"
                        CornerRadius="8,8,8,8">

                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1" Grid.Row="1"
                                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <DataGridDetailsPresenter Grid.Column="1"
                                                  Grid.Row="2"
                                                  SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                  Visibility="{TemplateBinding DetailsVisibility}" />
                                    <DataGridRowHeader Grid.RowSpan="3"
                                           SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                           Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                    <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding GroupName, Mode=TwoWay, UpdateSourceTrigger=LostFocus}">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="VerticalAlignment" Value="Top" />
                                                <Setter Property="HorizontalAlignment" Value="Left" />
                                                <Setter Property="Width" Value="100" />
                                                <Setter Property="Height" Value="20" />
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                <Setter Property="FontSize" Value="8" />
                                                <Setter Property="Foreground" Value="LightGray" />
                                                <Setter Property="ToolTip" Value="Group" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="false">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="TextBox">
                                                                    <TextBlock Text="{Binding GroupName, Mode=OneWay, UpdateSourceTrigger=LostFocus}" Padding="5" TextTrimming="CharacterEllipsis"  Cursor="Pen" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=LostFocus}">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="VerticalAlignment" Value="Top" />
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Setter Property="Width" Value="100" />
                                                <Setter Property="Height" Value="20" />
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                <Setter Property="FontSize" Value="12" />
                                                <Setter Property="Foreground" Value="PaleVioletRed" />
                                                <Setter Property="TextWrapping" Value="NoWrap" />
                                                <Setter Property="FontStyle" Value="Italic" />
                                                <Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="false">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="TextBox">
                                                                    <TextBlock Text="{Binding Title, Mode=OneWay, UpdateSourceTrigger=LostFocus}" TextTrimming="CharacterEllipsis" Cursor="Pen" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="WhiteSmoke" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </DataGrid.RowStyle>

        <DataGrid.Columns>
            <DataGridTemplateColumn Width="1*" Header="When" CellTemplate="{StaticResource TriggerTemplate}" />
            <DataGridTemplateColumn Width="1*" Header="If" CellTemplate="{StaticResource ConditionTemplate}" />
            <DataGridTemplateColumn Width="1*" Header="Then" CellTemplate="{StaticResource ActionTemplate}" />
        </DataGrid.Columns>
    </DataGrid>
</UserControl>